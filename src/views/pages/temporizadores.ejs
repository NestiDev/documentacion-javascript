<!DOCTYPE html>

<html lang="es">
    <head>
        <%- include('../partials/head'); %>
    </head>

    <body>
        <!--  
            .header_component: contenedor de la sesion, definimos un ID
            .para implementar este elemento en './src/js/main.js'
        -->
        <header class="header_component" id="header-component"><%- include('../partials/header'); %></header>

        <!--  
            components_container: contenedor de nav_component y de main_components
        -->
        <div class="components_container">
            <!--  
                .nav_component: contenedor de la sesion, definimos un ID 
                .para implementar este elemento en './src/js/main.js'
            -->
            <nav class="nav_component" id="menu-nav"><%- include('../partials/navbar'); %></nav>

            <!--  
                main_components: contenedor de section_banner,
                section_container y 1 tag-footer
            -->
            <main class="main_components">
                <!--  
                    section_banner: contenedor de 1 tag-h2, de 1 tag-hr
                    y 1 tag-p
                -->
                <section class="section_banner">
                    <!--  
                        tag-h2: en esta definimos el titulo del banner
                    -->
                    <h2>Temporizadores</h2>

                    <!--  
                        tag-hr: esta tag la definimos la linea que acompaÃ±a
                        al titulo de la seccion
                    -->
                    <hr class="line_titles" />

                    <!--  
                        tag-p: en esta definimos el parrafo de la seccion
                    -->
                    <p>
                        Son utiles cuando queremos que una porcion de codigo se ejecute una unica vez o durante un periodo de tiempo. Es valido aclarar que este tiempo se mide
                        <strong>en segundos</strong> Dicho esto definir un valor 500 hace referencia a medio segundo y 1000 hace referencia a un segundo completo.
                    </p>
                </section>

                <!--  
                    sections_container: contenedor de las secciones que componen
                    esta vista
                -->
                <div class="sections_container">
                    <!--  
						sect_content: contenedor de 1 tag-h3, 1 tag-p y de sect_box_img
					-->
                    <section class="sect_content">
                        <!--  
							tag-h3: en esta definimos el titulo de la seccion
						-->
                        <h3>01. SetTimeout</h3>

                        <p>
                            Este meotodo recibe al final de su declaracion un valor numerico que indica en tiempo, el momento en que sera <strong>ejecutado el codigo</strong> que se defina dentro del
                            scope de la funcion anonima. Cabe resaltar que dicha ejecucion solo se realiza una unica vez.
                        </p>

                        <!--  
                            code_box: en esta definimos
                        -->
                        <div class="code_box">
                            <pre><code><span class="circle first_circle"></span><span class="circle second_circle"></span><span class="circle thirt_circle"></span></code></pre>

                            <pre><code><span class="index inner_index">01</span><span class="variable">let </span>temporizador <span class="operator">= </span><span class="functions">setTimeout(<span class="parenthesis">() </span>=> </span><span class="brackets">{</span></code></pre>

                            <pre><code><span class="index">02</span></code></pre>

                            <pre><code><span class="index outer_index">03</span><span class="console">console</span><span class="keyword">.log</span><span class="parenthesis">(</span><span class="string">"Este mensaje sera mostrado pasado un segundo"</span><span class="parenthesis">)</span><span class="semi_colon">;</span></code></pre>

                            <pre><code><span class="index">04</span></code></pre>

                            <pre><code><span class="index inner_index">05</span><span class="brackets">}</span><span class="semi_colon">, </span>1000<span class="functions">)</span><span class="semi_colon">;</span></code></pre>

                            <!--  
                                output_box: en esta definimos la salida en respuesta al codigo
                            -->
                            <div class="output_box">
                                <pre></pre>
                                <pre><span>></span> Este mensaje sera mostrado pasado un segundo</pre>
                            </div>
                        </div>
                    </section>

                    <section class="sect_content">
                        <h3>02. SetTimeout y funciones</h3>

                        <p>
                            Como ya habiamos dicho, estos metodos por defecto ejecutan funciones anonimas las cuales podemos convertir a funciones <strong>declaradas o expresadas</strong> y seguiria
                            funcionando de la misma manera. Cabe decir que, todo codigo definido inmediatamente despues del temporizador sera ejecutado primero.
                        </p>

                        <div class="code_box">
                            <pre><code><span class="circle first_circle"></span><span class="circle second_circle"></span><span class="circle thirt_circle"></span></code></pre>

                            <pre><code><span class="index inner_index">01</span><span class="functions">function </span>saludar<span class="functions">() </span><span class="brackets">{</span></code></pre>

                            <pre><code><span class="index">02</span></code></pre>

                            <pre><code><span class="index outer_index">03</span><span class="console">console</span><span class="keyword">.log</span><span class="parenthesis">(</span><span class="string">"Te saludare una vez pasado medio segundo"</span><span class="parenthesis">)</span><span class="semi_colon">;</span></code></pre>

                            <pre><code><span class="index">04</span></code></pre>

                            <pre><code><span class="index inner_index">05</span><span class="brackets">}</span><span class="semi_colon">;</span></code></pre>

                            <pre><code><span class="index">06</span></code></pre>

                            <pre><code><span class="index inner_index">07</span><span class="functions">setTimeout(</span>saludar<span class="semi_colon">, </span><span class="number">500</span><span class="functions">)</span><span class="semi_colon">;</span></code></pre>

                            <pre><code><span class="index">08</span></code></pre>

                            <pre><code><span class="index inner_index">09</span><span class="console">console</span><span class="keyword">.log</span><span class="parenthesis">(</span><span class="string">"Hola Maria"</span><span class="parenthesis">)</span><span class="semi_colon">;</span></code></pre>

                            <div class="output_box">
                                <pre></pre>
                                <pre><span>></span> Hola Maria</pre>
                                <pre><span>></span> Te saludare una vez pasado medio segundo</pre>
                            </div>
                        </div>
                    </section>

                    <section class="sect_content">
                        <h3>03. SetInterval</h3>

                        <p>
                            Este meotodo recibe al final de su declaracion un valor numerico que indica en tiempo, el momento en que sera <strong>ejecutado el codigo</strong> que se defina dentro del
                            scope de la funcion anonima. Cabe resaltar que a diferencia de <strong>setTimeout</strong>
                            dicha ejecucion se realizara cada que se alcance el tiempo establecido.
                        </p>

                        <div class="code_box">
                            <pre><code><span class="circle first_circle"></span><span class="circle second_circle"></span><span class="circle thirt_circle"></span></code></pre>

                            <pre><code><span class="index inner_index">01</span><span class="variable">let </span>temporizador <span class="operator">= </span><span class="functions">setInterval(<span class="parenthesis">() </span>=> </span><span class="brackets">{</span></code></pre>

                            <pre><code><span class="index">02</span></code></pre>

                            <pre><code><span class="index outer_index">03</span><span class="console">console</span><span class="keyword">.log</span><span class="parenthesis">(</span><span class="string">"Este mensaje sera mostrado cada un segundo"</span><span class="parenthesis">)</span><span class="semi_colon">;</span></code></pre>

                            <pre><code><span class="index">04</span></code></pre>

                            <pre><code><span class="index inner_index">05</span><span class="brackets">}</span><span class="semi_colon">, </span>1000<span class="functions">)</span><span class="semi_colon">;</span></code></pre>

                            <div class="output_box">
                                <pre></pre>
                                <pre><span>></span> Este mensaje sera mostrado cada un segundo</pre>
                                <pre><span>></span> Este mensaje sera mostrado cada un segundo</pre>
                                <pre><span>></span> Este mensaje sera mostrado cada un segundo</pre>
                            </div>
                        </div>
                    </section>

                    <section class="sect_content">
                        <h3>04. SetInterval y funciones</h3>

                        <p>
                            Como ya habiamos dicho, estos metodos por defecto ejecutan funciones anonimas las cuales podemos convertir a funciones <strong>declaradas o expresadas</strong> y seguiria
                            funcionando de la misma manera. Cabe decir que, todo codigo definido inmediatamente despues del temporizador sera ejecutado primero.
                        </p>

                        <div class="code_box">
                            <pre><code><span class="circle first_circle"></span><span class="circle second_circle"></span><span class="circle thirt_circle"></span></code></pre>

                            <pre><code><span class="index inner_index">01</span><span class="functions">function </span>saludar<span class="functions">() </span><span class="brackets">{</span></code></pre>

                            <pre><code><span class="index">02</span></code></pre>

                            <pre><code><span class="index outer_index">03</span><span class="console">console</span><span class="keyword">.log</span><span class="parenthesis">(</span><span class="string">"Te saludare cada segundo y medio"</span><span class="parenthesis">)</span><span class="semi_colon">;</span></code></pre>

                            <pre><code><span class="index">04</span></code></pre>

                            <pre><code><span class="index inner_index">05</span><span class="brackets">}</span><span class="semi_colon">;</span></code></pre>

                            <pre><code><span class="index">06</span></code></pre>

                            <pre><code><span class="index inner_index">07</span><span class="functions">setInterval(</span>saludar<span class="semi_colon">, </span><span class="number">500</span><span class="functions">)</span><span class="semi_colon">;</span></code></pre>

                            <pre><code><span class="index">08</span></code></pre>

                            <pre><code><span class="index inner_index">09</span><span class="console">console</span><span class="keyword">.log</span><span class="parenthesis">(</span><span class="string">"Hola Juan"</span><span class="parenthesis">)</span><span class="semi_colon">;</span></code></pre>

                            <div class="output_box">
                                <pre></pre>
                                <pre><span>></span> Hola Juan</pre>
                                <pre><span>></span> Te saludare cada segundo y medio</pre>
                                <pre><span>></span> Te saludare cada segundo y medio</pre>
                                <pre><span>></span> Te saludare cada segundo y medio</pre>
                            </div>
                        </div>
                    </section>

                    <section class="sect_content">
                        <h3>05. ClearInterval</h3>

                        <p>
                            Nos permite a travez de condiciones detener la ejecucion de <strong>setInterval</strong>
                            para ello este metodo recibe la variable que almacena el temporizador e indica que, una vez cumplida la condicion el codigo definido dentro del scope de la funcion anonima
                            <strong> dejara de ser ejecutado</strong>
                        </p>

                        <div class="code_box">
                            <pre><code><span class="circle first_circle"></span><span class="circle second_circle"></span><span class="circle thirt_circle"></span></code></pre>

                            <pre><code><span class="index inner_index">01</span><span class="variable">let </span>contador <span class="operator">= </span><span class="number">0</span><span class="semi_colon">;</span></code></pre>

                            <pre><code><span class="index">02</span></code></pre>

                            <pre><code><span class="index inner_index">03</span><span class="variable">let </span>temporizador <span class="operator">= </span><span class="functions">setInterval(<span class="parenthesis">() </span>=> </span><span class="brackets">{</span></code></pre>

                            <pre><code><span class="index">04</span></code></pre>

                            <pre><code><span class="index outer_index">05</span>contador<span class="operator">++</span><span class="semi_colon">;</span></code></pre>

                            <pre><code><span class="index">06</span></code></pre>

                            <pre><code><span class="index outer_index">07</span><span class="console">console</span><span class="keyword">.log</span><span class="parenthesis">(</span><span class="string">"Solo tendremos dos impresiones por consola"</span><span class="parenthesis">)</span><span class="semi_colon">;</span></code></pre>

                            <pre><code><span class="index">08</span></code></pre>

                            <pre><code><span class="index outer_index">09</span><span class="properties">if</span><span class="parenthesis">(</span>contador <span class="operator">=== </span><span class="number">2</span><span class="parenthesis">)</span><span class="brackets"> {</span></code></pre>

                            <pre><code><span class="index">10</span></code></pre>

                            <pre><code><span class="index outer_doble_index">11</span><span class="functions">clearInterval(</span>temporizador<span class="functions">)</span><span class="semi_colon">;</span></code></pre>

                            <pre><code><span class="index">12</span></code></pre>

                            <pre><code><span class="index outer_index">13</span><span class="brackets">}</span><span class="semi_colon">;</span></code></pre>

                            <pre><code><span class="index">14</span></code></pre>

                            <pre><code><span class="index inner_index">15</span><span class="brackets">}</span><span class="semi_colon">, </span>3000<span class="functions">)</span><span class="semi_colon">;</span></code></pre>

                            <div class="output_box">
                                <pre></pre>
                                <pre><span>></span> Solo tendremos dos impresiones por consola</pre>
                                <pre><span>></span> Solo tendremos dos impresiones por consola</pre>
                            </div>
                        </div>
                    </section>

                    <!--  
                        incluimos el partial pagination.ejs y asigamos los valores requeridos por 
                        las variables ahi definidas
                    -->
                    <%- include('../partials/pagination', previousSection="./date", nextSection="./regexp-flags"); %>

                    <!--  
                        section_footer
                    -->
                    <footer class="section_footer">Temporizadores - Javascript</footer>
                </div>
            </main>
        </div>

        <script src="./js/main.js"></script>
    </body>
</html>
