<!DOCTYPE html>

<html lang="es">
    <head>
        <%- include('../partials/head'); %>
    </head>

    <body>
        <!--  
            .header_component: contenedor de la sesion, definimos un ID
            .para implementar este elemento en './src/js/main.js'
        -->
        <header class="header_component" id="header-component"><%- include('../partials/header'); %></header>

        <!--  
            components_container: contenedor de nav_component y de main_components
        -->
        <div class="components_container">
            <!--  
                .nav_component: contenedor de la sesion, definimos un ID 
                .para implementar este elemento en './src/js/main.js'
            -->
            <nav class="nav_component" id="menu-nav"><%- include('../partials/navbar'); %></nav>

            <!--  
                main_components: contenedor de section_banner,
                section_container y 1 tag-footer
            -->
            <main class="main_components">
                <!--  
                    section_banner: contenedor de 1 tag-h2, de 1 tag-hr
                    y 1 tag-p
                -->
                <section class="section_banner">
                    <!--  
                        tag-h2: en esta definimos el titulo del banner
                    -->
                    <h2>nodeChild</h2>

                    <!--  
                        tag-hr: esta tag la definimos la linea que acompaÃ±a
                        al titulo de la seccion
                    -->
                    <hr class="line_titles" />

                    <!--  
                        tag-p: en esta definimos el parrafo de la seccion
                    -->
                    <p>
                        Esta interfaz nos provee de metodos y propiedades l@s cuales nos permiten acceder y recorrer los elementos hijo peretenecientes a un elemento padre referenciado y modificar su
                        comportamiento a lo que se le conoce como relacion padre a hijo.
                    </p>
                </section>

                <!--  
                    sections_container: contenedor de las secciones que componen
                    esta vista
                -->
                <div class="sections_container">
                    <!--  
						sect_content: contenedor de 1 tag-h3, 1 tag-p y de sect_box_img
					-->
                    <section class="sect_content">
                        <!--  
							tag-h3: en esta definimos el titulo de la seccion
						-->
                        <h3>01. Relacion padre a hijo</h3>

                        <!--  
							tag-p: en esta definimos el parrafo de la seccion
						-->
                        <p>
                            Cconsiste en la definicion de un <strong>elemento HTML</strong>
                            al cual internamente se le van definiendo otros elementos. Si deseamos conocer la estructura de un elemento basta con seleccionarlo e imprimir su variable por consola.
                        </p>

                        <!--  
							sect_box_img: contenedor de 1 tag-img
						-->
                        <div class="sect_box_img">
                            <img src="../../assets/images/DOM/nodeChild/n01.png" alt="Relacion padre e hijos" />
                        </div>
                    </section>

                    <section class="sect_content">
                        <h3>02. Propiedad tagName</h3>

                        <p>
                            Nos permite conocer el nombre de la etiqueta del <strong>elemento HTML</strong> referenciado, otras propiedades similares serian <strong>nodeName</strong> y
                            <strong>localName</strong>
                        </p>

                        <div class="sect_box_img">
                            <img src="../../assets/images/DOM/nodeChild/e01.png" alt="propiedad tagName" />
                        </div>
                    </section>

                    <section class="sect_content">
                        <h3>03. Propiedad firstElementChild</h3>

                        <p>
                            Nos permite seleccionar el primer elemento hijo que sea un <strong>elemento HTML</strong> otra propiedad similar seria <strong>firstChild</strong> la cual retorna la
                            distancia que existe entre la definicion del elemento padre y el primer elemento hijo.
                        </p>

                        <div class="sect_box_img">
                            <img src="../../assets/images/DOM/nodeChild/n02.png" alt="Propiedad firstEelementChild" />
                        </div>
                    </section>

                    <section class="sect_content">
                        <h3>04. Propiedad lastElementChild</h3>

                        <p>
                            Nos permite seleccionar el ultimo elemento hijo que sea un <strong>elemento HTML</strong> otra propiedad similar seria <strong>lastChild</strong> la cual retorna la
                            distancia que existe entre la definicion del elemento padre y el ultimo elemento hijo.
                        </p>

                        <div class="sect_box_img">
                            <img src="../../assets/images/DOM/nodeChild/n03.png" alt="propiedad lastElementChild" />
                        </div>
                    </section>

                    <section class="sect_content">
                        <h3>05. Propiedad childElementCount</h3>

                        <p>Nos permite conocer la cantidad de elementos hijo definidos dentro de un elemento padre, de no existir ninguno su valor sera 0.</p>

                        <div class="sect_box_img">
                            <img src="../../assets/images/DOM/nodeChild/n04.png" alt="propiedad childElementCount" />
                        </div>
                    </section>

                    <section class="sect_content">
                        <h3>06. Propiedad children</h3>

                        <p>
                            Retorna un <strong>array</strong> con todos los elementos hijo, otra propiedad similar seria <strong>childNodes</strong> la cual retorna el mismo <strong>array</strong> con
                            la diferencia que esta tiene en cuenta la distancia que existe entre cada elemento.
                        </p>

                        <div class="sect_box_img">
                            <img src="../../assets/images/DOM/nodeChild/n05.png" alt="propiedad children" />
                        </div>
                    </section>

                    <section class="sect_content">
                        <h3>07. Metodos createElement y appendChild</h3>

                        <p>
                            Nos permiten crear e insertar un nuevo elemento hijo. Para ello, con <strong>createElement</strong> definimos el <strong>elemento HTML</strong> que deseamos crear, a
                            continuacion con la propiedad <strong>innertHTML</strong> generamos el contenido del elemento y finalmente con <strong>appendChild</strong> realizamos la insercion de este
                            dentro del elemento padre.
                        </p>

                        <div class="sect_box_img">
                            <img src="../../assets/images/DOM/nodeChild/n06.png" alt="metodos createElement y append" />
                        </div>
                    </section>

                    <section class="sect_content">
                        <h3>08. Metodo insertBefore</h3>

                        <p>
                            Nos permite insertar un nuevo elemento hijo justo por encima de un elemento hijo ya existente. Para ello, es importante tener referenciado al elemento padre y a un elemento
                            hijo, luego debemos crear el nuevo elemento para finalmente implementar <strong>insertBefore</strong> el cual recibe como parametro el elemento que fue creado y el elemento
                            hijo utilizado como referencia.
                        </p>

                        <div class="sect_box_img">
                            <img src="../../assets/images/DOM/nodeChild/e02.png" alt="metodo insertBefore" />
                        </div>
                    </section>

                    <section class="sect_content">
                        <h3>09. Metodo insertBefore - tip</h3>

                        <p>
                            Este tip nos permite insertar un nuevo elemento hijo justo por debajo de un elemento hijo ya existente. Para ello, es importante tener referenciado al elemento padre y a un
                            elemento hijo, luego debemos crear el nuevo elemento para finalmente implementar <strong>insertBefore</strong> el cual recibe como parametro el elemento que fue creado y el
                            elemento hijo, la diferencia radica en colocarle la propiedad <strong>nextElementSibling</strong> al elemento referenciado.
                        </p>

                        <div class="sect_box_img">
                            <img src="../../assets/images/DOM/nodeChild/e03.png" alt="metodo insertBefore - tip" />
                        </div>
                    </section>

                    <section class="sect_content">
                        <h3>10. Metodo removeChild</h3>

                        <p>Nos permite eliminar un elemento hijo, para ello este recibe como parametro el <strong>elemento HTML</strong> a eliminar.</p>

                        <div class="sect_box_img">
                            <img src="../../assets/images/DOM/nodeChild/n07.png" alt="metodo removeChild" />
                        </div>
                    </section>

                    <section class="sect_content">
                        <h3>11. Metodos createTextNode y replaceChild</h3>

                        <p>
                            Nos permiten crear el contenido de un nuevo elemento hijo y reemplazarlo por uno ya existente. Para ello, es importante tener referenciado al elemento padre y al elemento
                            hijo que deseamos reemplazar, luego debemos crear el nuevo elemento y con <strong>createTextNode</strong> definimos su contenido, seguido debemos insertarlo dentro del
                            elemento padre y finalmente hacemos el reemplazo con <strong>replaceChild</strong>
                            el cual recibe como parametros el elemento que fue creado y el elemento a ser reemplazado.
                        </p>

                        <div class="sect_box_img">
                            <img src="../../assets/images/DOM/nodeChild/n08.png" alt="metodos createTextNode y replaceChild" />
                        </div>
                    </section>

                    <section class="sect_content">
                        <h3>12. Metodo cloneNode</h3>

                        <p>
                            Nos permiten clonar un elemento hijo. Para ello, es importante tener referenciado al elemento padre y al elemento hijo que deseamos clonar, luego a este elemento le
                            definimos
                            <strong>cloneNode</strong> con valor <strong>true</strong> para que clone el elemento y su contenido. Si se establece un valor <strong>false</strong> se clonaria el
                            elemento sin contenido. Finalmente, insertamos dentro del elemento padre el elemento clonado.
                        </p>

                        <div class="sect_box_img">
                            <img src="../../assets/images/DOM/nodeChild/n09.png" alt="metodo cloneNode" />
                        </div>
                    </section>

                    <!--  
                        section_footer
                    -->
                    <footer class="section_footer">nodeChild - DOM</footer>
                </div>
            </main>
        </div>

        <script src="./js/main.js"></script>
    </body>
</html>
